=======================
 Architecture
=======================

.. contents ::

Introduction
-------------

This page gives overview of Go Mobile architecture.

Architecture overview
---------------------

.. figure::  images/architecture.png
   :align:   center

   Architectural overview
   
Python run-time
-----------------

Plone 3 CMS is built on the top of Python runtime.
Python is a remarkably powerful dynamic programming language that is used in a wide variety of application domains.
Specifically, Python version 2.4 is used (will be changed in Plone 4).

Python mobile framework libraries
----------------------------------

This can be used with any Python project.
We have succesfully used them with Django sites.

mobile.sniffer
==============


.. figure::  images/sniffer.png
   :align:   center

   Handset detection backends.

* Abstraction layout for different handset database abstraction

* Brand name recognizition regular expressions for mobile redirects two provide ::doc::`two pass user agent detection </usermanual/sniffing>`

* Pluggable backend mechanism

* Currently supports following handset databases: Wurfl, DeviceAtlas, Apex Vertex, WAP profiles. 

mobile.heurestic
================

Condensed years of experience dealing with mobile phone complexity.
This package contains rules-of-thumb how to generate HTML compatible for different user agents.

* Serving correct content type and docstring

* Phone number links

* Openining a navigator

* Downloadable vCards

Internally uses `vobject <http://vobject.skyhouseconsulting.com/>`_ Python module.

mobile.htmlprocessing
======================

mobile.htmlprocessing provides utilities to sanitize arbitary HTML for mobile output.

* Transform HTML to XHTML

* Rewrite <img> tags

* Clean up untrusted HTML code

Internally uses `lxml <http://codespeak.net/lxml/>`_ Python module.

Plone layer
-----------

gomobile.mobile
=============== 

Core mobile functionality.

* Mobile behavior: mobile specific settings for Archetypes content 

* Mobile add-on layer and theme layer

* URL mapper between web and mobile site

* Mobile site redirector
	
* Preview action and mobile simulator CSS and JS code
	
* Tracking and analytics

* Content type and docstring abstraction
	
* Plone specific HTML processing and mobile image resizer

* Mobile folder listing

* Documentation in Sphinx format

gomobile.convergence
=====================

Multichannel publishing options.

* Multi-channel publishing behavior for Archetypes content

* Set folder/page to be available in web and mobile only
	
* Override field values individually e.g. different body text for a page on web and mobile (gomobile.convergence.overrider)

* Special navigation code supporting multi-channel publishing

gomobiletheme.basic
====================

Default mobile site theme which can be extended for your specific needs.

See more about ::doc::`theming </developermanual/theming>`.

* Uses `Grok <http://grok.zope.org>`_ API and five.grok views and viewlets

* `Zope Page Templates <http://docs.zope.org/zope2/zope2book/AppendixC.html>`_ (.pt) are used as the template language  

gomobile.imageinfo
==================

Helpers to open and read various kind of persistent image objects used
in Zope environments.

gomobile.supporter
====================

Add mobile support for various Plone add-on products which are not part of Plone core.

gomobile.buildout
===================

`Buildout <http://www.buildout.org>`_ recipes for repeatable installations. 

* Include Go Mobile with your Plone set-up

* Checking out the source code  

* Making releases.

mfabrik.behaviorutilities
===========================

Use `plone.behavior <http://pypi.python.org/pypi/plone.behavior>` content extension mechanism with 
`Archetypes http://plone.org/products/archetypes<>` content type subsystem.

collective.fastview
=====================

Helper methods for Plone and Grok views and viewlets. 


 